name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install
        run: npm ci
      - name: Test
        run: npm test

  backend:
    name: Backend Integration Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: blep
          POSTGRES_PASSWORD: blep
          POSTGRES_DB: blep_test
        options: >-
          --health-cmd "pg_isready -U blep" \
          --health-interval 1s \
          --health-timeout 5s \
          --health-retries 30
        ports:
          - 54329:5432
    env:
      TEST_DB_URL: postgres://blep:blep@localhost:54329/blep_test
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - name: Install
        run: npm ci
      - name: Migrate
        run: DATABASE_URL=${{ env.TEST_DB_URL }} npx node-pg-migrate up -m migrations
      - name: Test
        run: DATABASE_URL=${{ env.TEST_DB_URL }} npm test
      - name: Backend E2E (API level)
        run: |
          DATABASE_URL=${{ env.TEST_DB_URL }} npx node-pg-migrate up -m migrations
          DATABASE_URL=${{ env.TEST_DB_URL }} npm run seed
          DATABASE_URL=${{ env.TEST_DB_URL }} npm run test:e2e

  fullstack-e2e:
    name: Full Stack Selenium E2E
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: blep
          POSTGRES_PASSWORD: blep
          POSTGRES_DB: blep
        options: >-
          --health-cmd "pg_isready -U blep" \
          --health-interval 1s \
          --health-timeout 5s \
          --health-retries 30
      backend:
        image: node:20-alpine
        env:
          DATABASE_URL: postgres://blep:blep@postgres:5432/blep
          PORT: 4000
          CORS_ORIGINS: http://localhost:8080
        ports:
          - 4000:4000
        options: >-
          --health-cmd "wget -qO- http://localhost:4000/healthz || exit 1" \
          --health-interval 2s \
          --health-timeout 5s \
          --health-retries 30
        command: >-
          sh -c "apk add --no-cache bash curl wget git && cd /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/backend && npm ci && npx node-pg-migrate up -m migrations && node src/server.js"
      frontend:
        image: node:20-alpine
        env:
          VITE_API_BASE: http://localhost:4000
        ports:
          - 8080:8080
        options: >-
          --health-cmd "wget -qO- http://localhost:8080 || exit 1" \
          --health-interval 2s \
          --health-timeout 5s \
          --health-retries 30
        command: >-
          sh -c "apk add --no-cache bash curl wget git && cd /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/frontend && npm ci && npm run build && npx serve -s dist -l 8080"
    steps:
      - uses: actions/checkout@v4
      - name: Install E2E deps
        run: npm --prefix e2e ci
      - name: Wait for backend health
        run: |
          for i in {1..60}; do
            if curl -sf http://localhost:4000/healthz > /dev/null; then echo OK; exit 0; fi
            sleep 1
          done
          echo "Backend failed to become healthy" >&2; exit 1
      - name: Run Selenium E2E
        env:
          FRONTEND_URL: http://localhost:8080
          BACKEND_HEALTH: http://localhost:4000/healthz
        run: node e2e/test.e2e.mjs

  lint-build:
    name: Build Frontend (Smoke)
    runs-on: ubuntu-latest
    needs: [frontend]
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install
        run: npm ci
      - name: Build
        run: npm run build

